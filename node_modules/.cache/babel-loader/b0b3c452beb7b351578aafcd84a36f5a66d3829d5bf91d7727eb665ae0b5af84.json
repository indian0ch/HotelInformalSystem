{"ast":null,"code":"import { getRooms, modifyRoom } from \"../../classes/Room.ts\";\nimport { Guest } from \"../../classes/Guest.ts\";\n\n///Facade\nexport class ReservationRoomFacade {\n  constructor() {\n    this.reservationRoom = void 0;\n    this.reservationRoom = new ReservationRoom();\n  }\n  async doReservation() {\n    console.log(this.reservationRoom.guest);\n    let available = await this.reservationRoom.checkAvailability();\n    if (typeof available !== \"string\") {\n      available.checkInDate = this.reservationRoom.checkInDate;\n      available.checkOutDate = this.reservationRoom.checkOutDate;\n      available.guestId = this.reservationRoom.guest.id;\n      available.priceService = this.reservationRoom.servicePrice;\n      this.reservationRoom.guest.postGuest(this.reservationRoom.guest);\n      modifyRoom(available);\n    } else {\n      window.alert(\"No one room with such parameter available!\");\n    }\n  }\n}\nexport class ReservationRoom {\n  constructor() {\n    let full_name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Fesiuk_Andrey\";\n    let phoneNumbe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"030302032\";\n    let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 32335552;\n    let email = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"den@gmail.com\";\n    let checkInDate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"2023-06-01\";\n    let checkOutDate = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"2023-06-03\";\n    let typeRoom = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 100;\n    let servicePrice = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 20;\n    this.guest = void 0;\n    this.room = void 0;\n    this.typeRoom = void 0;\n    this.checkInDate = void 0;\n    this.checkOutDate = void 0;\n    this.servicePrice = void 0;\n    this.guest = new Guest(id, full_name, email, phoneNumbe);\n    this.checkInDate = checkInDate;\n    this.checkOutDate = checkOutDate;\n    this.typeRoom = typeRoom;\n    this.servicePrice = servicePrice;\n  }\n\n  // public async doReservation() {\n  //   console.log(this.guest);\n  //   let available = await this.checkAvailability();\n\n  //   if (typeof available !== \"string\") {\n  //     available.checkInDate = this.checkInDate;\n  //     available.checkOutDate = this.checkOutDate;\n  //     available.guestId = this.guest.id;\n  //     available.priceService = this.servicePrice;\n  //     this.guest.postGuest(this.guest);\n  //     modifyRoom(available);\n  //   } else {\n  //     window.alert(\"No one room with such parametr available!\");\n  //   }\n  // }\n  async checkAvailability() {\n    let roomArray = await getRooms().then(roomArr => {\n      return roomArr;\n    });\n    const availableRoomArray = roomArray.filter(room => room.guestId === null && room.pricePerNight == this.typeRoom);\n    if (availableRoomArray.length !== 0) {\n      return availableRoomArray[0];\n    } else {\n      return \"No\";\n    }\n  }\n}","map":{"version":3,"names":["getRooms","modifyRoom","Guest","ReservationRoomFacade","constructor","reservationRoom","ReservationRoom","doReservation","console","log","guest","available","checkAvailability","checkInDate","checkOutDate","guestId","id","priceService","servicePrice","postGuest","window","alert","full_name","arguments","length","undefined","phoneNumbe","email","typeRoom","room","roomArray","then","roomArr","availableRoomArray","filter","pricePerNight"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Reservation/ReservationFacade.ts"],"sourcesContent":["import { Room, getRooms, modifyRoom } from \"../../classes/Room.ts\";\nimport { Guest } from \"../../classes/Guest.ts\";\n\n///Facade\nexport class ReservationRoomFacade {\n  protected reservationRoom: ReservationRoom;\n\n  constructor() {\n    this.reservationRoom = new ReservationRoom();\n  }\n\n  public async doReservation() {\n    console.log(this.reservationRoom.guest);\n    let available = await this.reservationRoom.checkAvailability();\n\n    if (typeof available !== \"string\") {\n      available.checkInDate = this.reservationRoom.checkInDate;\n      available.checkOutDate = this.reservationRoom.checkOutDate;\n      available.guestId = this.reservationRoom.guest.id;\n      available.priceService = this.reservationRoom.servicePrice;\n      this.reservationRoom.guest.postGuest(this.reservationRoom.guest);\n      modifyRoom(available);\n    } else {\n      window.alert(\"No one room with such parameter available!\");\n    }\n  }\n}\n\nexport class ReservationRoom {\n  public guest: Guest;\n  public room: Room;\n  public typeRoom: number;\n  public checkInDate: string;\n  public checkOutDate: string;\n  public servicePrice: number;\n\n  constructor(\n    full_name: string = \"Fesiuk_Andrey\",\n    phoneNumbe: string = \"030302032\",\n    id: number = 32335552,\n    email: string = \"den@gmail.com\",\n    checkInDate: string = \"2023-06-01\",\n    checkOutDate: string = \"2023-06-03\",\n    typeRoom: number = 100,\n    servicePrice: number = 20\n  ) {\n    this.guest = new Guest(id, full_name, email, phoneNumbe);\n    this.checkInDate = checkInDate;\n    this.checkOutDate = checkOutDate;\n    this.typeRoom = typeRoom;\n    this.servicePrice = servicePrice;\n  }\n\n  // public async doReservation() {\n  //   console.log(this.guest);\n  //   let available = await this.checkAvailability();\n\n  //   if (typeof available !== \"string\") {\n  //     available.checkInDate = this.checkInDate;\n  //     available.checkOutDate = this.checkOutDate;\n  //     available.guestId = this.guest.id;\n  //     available.priceService = this.servicePrice;\n  //     this.guest.postGuest(this.guest);\n  //     modifyRoom(available);\n  //   } else {\n  //     window.alert(\"No one room with such parametr available!\");\n  //   }\n  // }\n  public async checkAvailability() {\n    let roomArray = await getRooms().then((roomArr) => {\n      return roomArr;\n    });\n    const availableRoomArray = roomArray.filter(\n      (room) => room.guestId === null && room.pricePerNight == this.typeRoom\n    );\n    if (availableRoomArray.length !== 0) {\n      return availableRoomArray[0];\n    } else {\n      return \"No\";\n    }\n  }\n}\n"],"mappings":"AAAA,SAAeA,QAAQ,EAAEC,UAAU,QAAQ,uBAAuB;AAClE,SAASC,KAAK,QAAQ,wBAAwB;;AAE9C;AACA,OAAO,MAAMC,qBAAqB,CAAC;EAGjCC,WAAWA,CAAA,EAAG;IAAA,KAFJC,eAAe;IAGvB,IAAI,CAACA,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;EAC9C;EAEA,MAAaC,aAAaA,CAAA,EAAG;IAC3BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,eAAe,CAACK,KAAK,CAAC;IACvC,IAAIC,SAAS,GAAG,MAAM,IAAI,CAACN,eAAe,CAACO,iBAAiB,CAAC,CAAC;IAE9D,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;MACjCA,SAAS,CAACE,WAAW,GAAG,IAAI,CAACR,eAAe,CAACQ,WAAW;MACxDF,SAAS,CAACG,YAAY,GAAG,IAAI,CAACT,eAAe,CAACS,YAAY;MAC1DH,SAAS,CAACI,OAAO,GAAG,IAAI,CAACV,eAAe,CAACK,KAAK,CAACM,EAAE;MACjDL,SAAS,CAACM,YAAY,GAAG,IAAI,CAACZ,eAAe,CAACa,YAAY;MAC1D,IAAI,CAACb,eAAe,CAACK,KAAK,CAACS,SAAS,CAAC,IAAI,CAACd,eAAe,CAACK,KAAK,CAAC;MAChET,UAAU,CAACU,SAAS,CAAC;IACvB,CAAC,MAAM;MACLS,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAC5D;EACF;AACF;AAEA,OAAO,MAAMf,eAAe,CAAC;EAQ3BF,WAAWA,CAAA,EAST;IAAA,IARAkB,SAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,eAAe;IAAA,IACnCG,UAAkB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,WAAW;IAAA,IAChCP,EAAU,GAAAO,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,QAAQ;IAAA,IACrBI,KAAa,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,eAAe;IAAA,IAC/BV,WAAmB,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,YAAY;IAAA,IAClCT,YAAoB,GAAAS,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,YAAY;IAAA,IACnCK,QAAgB,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;IAAA,IACtBL,YAAoB,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,KAfpBb,KAAK;IAAA,KACLmB,IAAI;IAAA,KACJD,QAAQ;IAAA,KACRf,WAAW;IAAA,KACXC,YAAY;IAAA,KACZI,YAAY;IAYjB,IAAI,CAACR,KAAK,GAAG,IAAIR,KAAK,CAACc,EAAE,EAAEM,SAAS,EAAEK,KAAK,EAAED,UAAU,CAAC;IACxD,IAAI,CAACb,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACc,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACV,YAAY,GAAGA,YAAY;EAClC;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAaN,iBAAiBA,CAAA,EAAG;IAC/B,IAAIkB,SAAS,GAAG,MAAM9B,QAAQ,CAAC,CAAC,CAAC+B,IAAI,CAAEC,OAAO,IAAK;MACjD,OAAOA,OAAO;IAChB,CAAC,CAAC;IACF,MAAMC,kBAAkB,GAAGH,SAAS,CAACI,MAAM,CACxCL,IAAI,IAAKA,IAAI,CAACd,OAAO,KAAK,IAAI,IAAIc,IAAI,CAACM,aAAa,IAAI,IAAI,CAACP,QAChE,CAAC;IACD,IAAIK,kBAAkB,CAACT,MAAM,KAAK,CAAC,EAAE;MACnC,OAAOS,kBAAkB,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}