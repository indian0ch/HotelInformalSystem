{"ast":null,"code":"import { Employee, getWorkerById } from \"../../classes/Employee.ts\";\nconst urlJsonEmployee = \"http://localhost:4000/workers\";\n\n//Управління персоналом - Pattern Команда\n\n//Invoker\nexport class Manager {\n  constructor() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Andriy\";\n    //'Invoker'\n    this.commands = [];\n    this.name = void 0;\n    this.name = name;\n  }\n  SetCommand(com) {\n    this.commands.push(com);\n  }\n  ExecuteCommands() {\n    for (const command of this.commands) {\n      //console.log(command);\n      command.Execute();\n    }\n    //console.log(this.commands);\n    this.commands = [];\n  }\n}\n\n// export class WorkersCommand {\n//   public ListWorkers: string[] = [];\n//   //Dictionary in c#\n//   // public AddWorker(newEmployee: Employee): void {\n//   //   // console.log(`${workerName} прийнятий на роботу`);\n//   //   // this.ListWorkers.push(workerName, position);\n//   //   fetch(urlJsonEmployee, {\n//   //     method: \"POST\",\n//   //     headers: {\n//   //       \"Content-Type\": \"application/json\",\n//   //     },\n//   //     body: JSON.stringify(newEmployee),\n//   //   })\n//   //     .then((response) => response.json())\n//   //     .then((newEmployee: Employee) => {\n//   //       window.alert(\"Employee added to a database!\");\n//   //     })\n//   //     .catch((error) => {\n//   //       console.error(error);\n//   //     });\n//   // }\n\n//   public Fire(workerName: string): void {\n//     console.log(`${workerName} звільнений`);\n//     //this.ListWorkers.delete(workerName);\n//   }\n\n//   public CheckList(): void {\n//     console.log(\n//       \"Актуальний список праціників готелю на даний момент:[ПІБ]-[Посада]:\"\n//     );\n//     this.ListWorkers.forEach((position, workerName) => {\n//       console.log(`${workerName}-${position}`);\n//     });\n//   }\n// }\n\nexport class AddWorkersCommand {\n  constructor(worker) {\n    this.worker = void 0;\n    this.worker = worker;\n  }\n  Execute() {\n    console.log(true);\n    this.worker.addWorker(this.worker);\n  }\n}\nexport class FireWorkersCommand {\n  constructor(workerId) {\n    this.worker = void 0;\n    this.workerId = void 0;\n    this.workerId = workerId;\n  }\n  async Execute() {\n    console.log(\"1\");\n    let workerObject = await getWorkerById(this.workerId).then(employe => {\n      return employe;\n    });\n    if (workerObject.length !== 0) {\n      console.log(workerObject[0].name);\n      this.worker = new Employee(workerObject[0].id, workerObject[0].name, workerObject[0].position, workerObject[0].salary, \"\", false);\n      this.worker.fireWorker(this.worker);\n    }\n  }\n}\nexport class SendMessageWorkersCommand {\n  constructor(workerId) {\n    this.worker = void 0;\n    this.workerId = void 0;\n    this.r = void 0;\n    this.workerId = workerId;\n  }\n  async Execute() {\n    console.log(\"1\");\n    let workerObject = await getWorkerById(this.workerId).then(employe => {\n      return employe;\n    });\n    if (workerObject.length !== 0) {\n      console.log(workerObject[0].name);\n      this.worker = new Employee(workerObject[0].id, workerObject[0].name, workerObject[0].position, workerObject[0].salary, \"\", false);\n      this.worker.fireWorker(this.worker);\n    }\n  }\n}","map":{"version":3,"names":["Employee","getWorkerById","urlJsonEmployee","Manager","constructor","name","arguments","length","undefined","commands","SetCommand","com","push","ExecuteCommands","command","Execute","AddWorkersCommand","worker","console","log","addWorker","FireWorkersCommand","workerId","workerObject","then","employe","id","position","salary","fireWorker","SendMessageWorkersCommand","r"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Workers/WorkersCommand.ts"],"sourcesContent":["import { Employee, getWorkerById } from \"../../classes/Employee.ts\";\nconst urlJsonEmployee = \"http://localhost:4000/workers\";\n\n//Управління персоналом - Pattern Команда\nexport interface ICommand {\n  Execute(): void;\n}\n//Invoker\nexport class Manager {\n  //'Invoker'\n  private commands: ICommand[] = [];\n  private name: string;\n\n  constructor(name: string = \"Andriy\") {\n    this.name = name;\n  }\n\n  public SetCommand(com: ICommand): void {\n    this.commands.push(com);\n  }\n\n  public ExecuteCommands(): void {\n    for (const command of this.commands) {\n      //console.log(command);\n      command.Execute();\n    }\n    //console.log(this.commands);\n    this.commands = [];\n  }\n}\n\n// export class WorkersCommand {\n//   public ListWorkers: string[] = [];\n//   //Dictionary in c#\n//   // public AddWorker(newEmployee: Employee): void {\n//   //   // console.log(`${workerName} прийнятий на роботу`);\n//   //   // this.ListWorkers.push(workerName, position);\n//   //   fetch(urlJsonEmployee, {\n//   //     method: \"POST\",\n//   //     headers: {\n//   //       \"Content-Type\": \"application/json\",\n//   //     },\n//   //     body: JSON.stringify(newEmployee),\n//   //   })\n//   //     .then((response) => response.json())\n//   //     .then((newEmployee: Employee) => {\n//   //       window.alert(\"Employee added to a database!\");\n//   //     })\n//   //     .catch((error) => {\n//   //       console.error(error);\n//   //     });\n//   // }\n\n//   public Fire(workerName: string): void {\n//     console.log(`${workerName} звільнений`);\n//     //this.ListWorkers.delete(workerName);\n//   }\n\n//   public CheckList(): void {\n//     console.log(\n//       \"Актуальний список праціників готелю на даний момент:[ПІБ]-[Посада]:\"\n//     );\n//     this.ListWorkers.forEach((position, workerName) => {\n//       console.log(`${workerName}-${position}`);\n//     });\n//   }\n// }\n\nexport class AddWorkersCommand implements ICommand {\n  private worker: Employee;\n\n  constructor(worker: Employee) {\n    this.worker = worker;\n  }\n\n  public Execute(): void {\n    console.log(true);\n    this.worker.addWorker(this.worker);\n  }\n}\n\nexport class FireWorkersCommand implements ICommand {\n  private worker: Employee;\n  private workerId: number;\n\n  constructor(workerId: number) {\n    this.workerId = workerId;\n  }\n  public async Execute() {\n    console.log(\"1\");\n    let workerObject = await getWorkerById(this.workerId).then((employe) => {\n      return employe;\n    });\n    if (workerObject.length !== 0) {\n      console.log(workerObject[0].name);\n      this.worker = new Employee(\n        workerObject[0].id,\n        workerObject[0].name,\n        workerObject[0].position,\n        workerObject[0].salary,\n        \"\",\n        false\n      );\n      this.worker.fireWorker(this.worker);\n    }\n  }\n}\nexport class SendMessageWorkersCommand implements ICommand {\n  private worker: Employee;\n  private workerId: number;\n  r\n\n  constructor(workerId: number) {\n    this.workerId = workerId;\n  }\n  public async Execute() {\n    console.log(\"1\");\n    let workerObject = await getWorkerById(this.workerId).then((employe) => {\n      return employe;\n    });\n    if (workerObject.length !== 0) {\n      console.log(workerObject[0].name);\n      this.worker = new Employee(\n        workerObject[0].id,\n        workerObject[0].name,\n        workerObject[0].position,\n        workerObject[0].salary,\n        \"\",\n        false\n      );\n      this.worker.fireWorker(this.worker);\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}