{"ast":null,"code":"export const urlJsonGuest = \"http://localhost:4000/guests\";\nexport class Guest {\n  constructor(id, name, email, phoneNumber, priceService) {\n    this.id = void 0;\n    this.name = void 0;\n    this.email = void 0;\n    this.phoneNumber = void 0;\n    this.priceService = void 0;\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.phoneNumber = phoneNumber;\n    this.priceService = priceService;\n  }\n  getId() {\n    return this.id;\n  }\n  getName() {\n    return this.name;\n  }\n  getEmail() {\n    return this.email;\n  }\n  getPhoneNumber() {\n    return this.phoneNumber;\n  }\n  updateEmail(newEmail) {\n    this.email = newEmail;\n  }\n  updatePhoneNumber(newPhoneNumber) {\n    this.phoneNumber = newPhoneNumber;\n  }\n  postGuest(newGuest) {\n    fetch(\"http://localhost:4000/guests\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newGuest)\n    }).then(response => response.json()).then(newGuest => {\n      window.alert(\"Guest added to database!\");\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n}\nexport function getGuests() {\n  return fetch(urlJsonGuest).then(response => response.json()).then(data => {\n    const users = data; // Assuming the response directly contains the room data\n    //console.log(rooms);\n    return users;\n  }).catch(error => {\n    console.error(error);\n  });\n}\nfunction modifyGuest(modifiedGuest) {\n  fetch(`${urlJsonRoom}/${modifiedRoom.getId()}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(modifiedRoom)\n  }).then(response => response.json()).then(updatedRoom => {\n    window.alert(\"Room information updated!\");\n  }).catch(error => {\n    console.error(error);\n  });\n}","map":{"version":3,"names":["urlJsonGuest","Guest","constructor","id","name","email","phoneNumber","priceService","getId","getName","getEmail","getPhoneNumber","updateEmail","newEmail","updatePhoneNumber","newPhoneNumber","postGuest","newGuest","fetch","method","headers","body","JSON","stringify","then","response","json","window","alert","catch","error","console","getGuests","data","users","modifyGuest","modifiedGuest","urlJsonRoom","modifiedRoom","updatedRoom"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/classes/Guest.ts"],"sourcesContent":["export const urlJsonGuest = \"http://localhost:4000/guests\";\nexport class Guest {\n  private id: number;\n  private name: string;\n  private email: string;\n  private phoneNumber: string;\n  private priceService: number;\n\n  constructor(\n    id: number,\n    name: string,\n    email: string,\n    phoneNumber: string,\n    priceService: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.phoneNumber = phoneNumber;\n    this.priceService = priceService;\n  }\n\n  public getId(): number {\n    return this.id;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public getEmail(): string {\n    return this.email;\n  }\n\n  public getPhoneNumber(): string {\n    return this.phoneNumber;\n  }\n\n  public updateEmail(newEmail: string): void {\n    this.email = newEmail;\n  }\n\n  public updatePhoneNumber(newPhoneNumber: string): void {\n    this.phoneNumber = newPhoneNumber;\n  }\n  public postGuest(newGuest: Guest) {\n    fetch(\"http://localhost:4000/guests\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newGuest),\n    })\n      .then((response) => response.json())\n      .then((newGuest: Guest) => {\n        window.alert(\"Guest added to database!\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n}\nexport function getGuests(){\n  return    fetch(urlJsonGuest)\n  .then((response) => response.json())\n  .then((data) => {\n    const users = data; // Assuming the response directly contains the room data\n    //console.log(rooms);\n    return users;\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n}\nfunction modifyGuest(modifiedGuest: Guest) {\n  fetch(`${urlJsonRoom}/${modifiedRoom.getId()}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(modifiedRoom),\n  })\n    .then((response) => response.json())\n    .then((updatedRoom) => {\n      window.alert(\"Room information updated!\");\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,8BAA8B;AAC1D,OAAO,MAAMC,KAAK,CAAC;EAOjBC,WAAWA,CACTC,EAAU,EACVC,IAAY,EACZC,KAAa,EACbC,WAAmB,EACnBC,YAAoB,EACpB;IAAA,KAZMJ,EAAE;IAAA,KACFC,IAAI;IAAA,KACJC,KAAK;IAAA,KACLC,WAAW;IAAA,KACXC,YAAY;IASlB,IAAI,CAACJ,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEOC,KAAKA,CAAA,EAAW;IACrB,OAAO,IAAI,CAACL,EAAE;EAChB;EAEOM,OAAOA,CAAA,EAAW;IACvB,OAAO,IAAI,CAACL,IAAI;EAClB;EAEOM,QAAQA,CAAA,EAAW;IACxB,OAAO,IAAI,CAACL,KAAK;EACnB;EAEOM,cAAcA,CAAA,EAAW;IAC9B,OAAO,IAAI,CAACL,WAAW;EACzB;EAEOM,WAAWA,CAACC,QAAgB,EAAQ;IACzC,IAAI,CAACR,KAAK,GAAGQ,QAAQ;EACvB;EAEOC,iBAAiBA,CAACC,cAAsB,EAAQ;IACrD,IAAI,CAACT,WAAW,GAAGS,cAAc;EACnC;EACOC,SAASA,CAACC,QAAe,EAAE;IAChCC,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IAC/B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEP,QAAe,IAAK;MACzBU,MAAM,CAACC,KAAK,CAAC,0BAA0B,CAAC;IAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;AACF;AACA,OAAO,SAASE,SAASA,CAAA,EAAE;EACzB,OAAUd,KAAK,CAAClB,YAAY,CAAC,CAC5BwB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAES,IAAI,IAAK;IACd,MAAMC,KAAK,GAAGD,IAAI,CAAC,CAAC;IACpB;IACA,OAAOC,KAAK;EACd,CAAC,CAAC,CACDL,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;AACJ;AACA,SAASK,WAAWA,CAACC,aAAoB,EAAE;EACzClB,KAAK,CAAE,GAAEmB,WAAY,IAAGC,YAAY,CAAC9B,KAAK,CAAC,CAAE,EAAC,EAAE;IAC9CW,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACe,YAAY;EACnC,CAAC,CAAC,CACCd,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEe,WAAW,IAAK;IACrBZ,MAAM,CAACC,KAAK,CAAC,2BAA2B,CAAC;EAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}