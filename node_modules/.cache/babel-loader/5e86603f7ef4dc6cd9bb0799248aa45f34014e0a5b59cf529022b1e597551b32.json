{"ast":null,"code":"export class Guest {\n  constructor(id, name, email, phoneNumber) {\n    this.id = void 0;\n    this.name = void 0;\n    this.email = void 0;\n    this.phoneNumber = void 0;\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.phoneNumber = phoneNumber;\n  }\n  getId() {\n    return this.id;\n  }\n  getName() {\n    return this.name;\n  }\n  getEmail() {\n    return this.email;\n  }\n  getPhoneNumber() {\n    return this.phoneNumber;\n  }\n  updateEmail(newEmail) {\n    this.email = newEmail;\n  }\n  updatePhoneNumber(newPhoneNumber) {\n    this.phoneNumber = newPhoneNumber;\n  }\n}\nexport function postGuest() {\n  return fetch(\"http://localhost:4000/rooms\").then(response => response.json()).then(data => {\n    const rooms = data; // Assuming the response directly contains the room data\n    console.log(rooms);\n    return rooms;\n  }).catch(error => {\n    console.error(error);\n  });\n}","map":{"version":3,"names":["Guest","constructor","id","name","email","phoneNumber","getId","getName","getEmail","getPhoneNumber","updateEmail","newEmail","updatePhoneNumber","newPhoneNumber","postGuest","fetch","then","response","json","data","rooms","console","log","catch","error"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/classes/Guest.ts"],"sourcesContent":["export class Guest {\n  private id: number;\n  private name: string;\n  private email: string;\n  private phoneNumber: string;\n\n  constructor(id: number, name: string, email: string, phoneNumber: string) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.phoneNumber = phoneNumber;\n  }\n\n  public getId(): number {\n    return this.id;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public getEmail(): string {\n    return this.email;\n  }\n\n  public getPhoneNumber(): string {\n    return this.phoneNumber;\n  }\n\n  public updateEmail(newEmail: string): void {\n    this.email = newEmail;\n  }\n\n  public updatePhoneNumber(newPhoneNumber: string): void {\n    this.phoneNumber = newPhoneNumber;\n  }\n}\nexport function postGuest() {\n  return fetch(\"http://localhost:4000/rooms\")\n    .then((response) => response.json())\n    .then((data) => {\n      const rooms = data; // Assuming the response directly contains the room data\n      console.log(rooms);\n      return rooms;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}"],"mappings":"AAAA,OAAO,MAAMA,KAAK,CAAC;EAMjBC,WAAWA,CAACC,EAAU,EAAEC,IAAY,EAAEC,KAAa,EAAEC,WAAmB,EAAE;IAAA,KALlEH,EAAE;IAAA,KACFC,IAAI;IAAA,KACJC,KAAK;IAAA,KACLC,WAAW;IAGjB,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;EAEOC,KAAKA,CAAA,EAAW;IACrB,OAAO,IAAI,CAACJ,EAAE;EAChB;EAEOK,OAAOA,CAAA,EAAW;IACvB,OAAO,IAAI,CAACJ,IAAI;EAClB;EAEOK,QAAQA,CAAA,EAAW;IACxB,OAAO,IAAI,CAACJ,KAAK;EACnB;EAEOK,cAAcA,CAAA,EAAW;IAC9B,OAAO,IAAI,CAACJ,WAAW;EACzB;EAEOK,WAAWA,CAACC,QAAgB,EAAQ;IACzC,IAAI,CAACP,KAAK,GAAGO,QAAQ;EACvB;EAEOC,iBAAiBA,CAACC,cAAsB,EAAQ;IACrD,IAAI,CAACR,WAAW,GAAGQ,cAAc;EACnC;AACF;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EAC1B,OAAOC,KAAK,CAAC,6BAA6B,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd,MAAMC,KAAK,GAAGD,IAAI,CAAC,CAAC;IACpBE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOA,KAAK;EACd,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}