{"ast":null,"code":"//Передбачається функція,яка визначає сімейство схожих алгоритмів оплати і розміщує кожен з них у власному класі)  - Pattern Стратегія[Strategy]\n\n// Інтерфейс стратегії оплати\n\n// Конкретна реалізація стратегії оплати: Оплата готівкою\nclass CashPaymentStrategy {\n  pay(amount) {\n    console.log(`Payment of ${amount} by cash.`);\n    // Додатковий код для обробки оплати готівкою\n  }\n}\n\n// Конкретна реалізація стратегії оплати: Оплата кредитною карткою\nclass CreditCardPaymentStrategy {\n  constructor(cardNumber, cardExpiration, cardCVV) {\n    this.cardNumber = void 0;\n    this.cardExpiration = void 0;\n    this.cardCVV = void 0;\n    this.cardNumber = cardNumber;\n    this.cardExpiration = cardExpiration;\n    this.cardCVV = cardCVV;\n  }\n  pay(amount) {\n    console.log(`Payment of ${amount} by credit card: ${this.cardNumber}.`);\n    // Додатковий код для обробки оплати кредитною карткою\n  }\n}\n\nclass PayPalPaymentStrategy {\n  constructor(paypalUsername, paypalPassword) {\n    this.paypalUsername = void 0;\n    this.paypalPassword = void 0;\n    this.paypalUsername = paypalUsername;\n    this.paypalPassword = paypalPassword;\n  }\n  pay(amount) {\n    console.log(`Payment of ${amount} via PayPal with username: ${this.paypalUsername}.`);\n  }\n}","map":{"version":3,"names":["CashPaymentStrategy","pay","amount","console","log","CreditCardPaymentStrategy","constructor","cardNumber","cardExpiration","cardCVV","PayPalPaymentStrategy","paypalUsername","paypalPassword"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Payments/PaymentsStrategy.ts"],"sourcesContent":["//Передбачається функція,яка визначає сімейство схожих алгоритмів оплати і розміщує кожен з них у власному класі)  - Pattern Стратегія[Strategy]\n\n// Інтерфейс стратегії оплати\ninterface PaymentStrategy {\n  pay(amount: number): void;\n}\n\n// Конкретна реалізація стратегії оплати: Оплата готівкою\nclass CashPaymentStrategy implements PaymentStrategy {\n  pay(amount: number): void {\n    console.log(`Payment of ${amount} by cash.`);\n    // Додатковий код для обробки оплати готівкою\n  }\n}\n\n// Конкретна реалізація стратегії оплати: Оплата кредитною карткою\nclass CreditCardPaymentStrategy implements PaymentStrategy {\n  private cardNumber: string;\n  private cardExpiration: string;\n  private cardCVV: string;\n\n  constructor(cardNumber: string, cardExpiration: string, cardCVV: string) {\n    this.cardNumber = cardNumber;\n    this.cardExpiration = cardExpiration;\n    this.cardCVV = cardCVV;\n  }\n\n  pay(amount: number): void {\n    console.log(`Payment of ${amount} by credit card: ${this.cardNumber}.`);\n    // Додатковий код для обробки оплати кредитною карткою\n  }\n}\n\n\nclass PayPalPaymentStrategy implements PaymentStrategy {\n  private paypalUsername: string;\n  private paypalPassword: string;\n\n  constructor(paypalUsername: string, paypalPassword: string) {\n    this.paypalUsername = paypalUsername;\n    this.paypalPassword = paypalPassword;\n  }\n\n  pay(amount: number): void {\n    console.log(\n      `Payment of ${amount} via PayPal with username: ${this.paypalUsername}.`\n    );\n  }\n}\n"],"mappings":"AAAA;;AAEA;;AAKA;AACA,MAAMA,mBAAmB,CAA4B;EACnDC,GAAGA,CAACC,MAAc,EAAQ;IACxBC,OAAO,CAACC,GAAG,CAAE,cAAaF,MAAO,WAAU,CAAC;IAC5C;EACF;AACF;;AAEA;AACA,MAAMG,yBAAyB,CAA4B;EAKzDC,WAAWA,CAACC,UAAkB,EAAEC,cAAsB,EAAEC,OAAe,EAAE;IAAA,KAJjEF,UAAU;IAAA,KACVC,cAAc;IAAA,KACdC,OAAO;IAGb,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEAR,GAAGA,CAACC,MAAc,EAAQ;IACxBC,OAAO,CAACC,GAAG,CAAE,cAAaF,MAAO,oBAAmB,IAAI,CAACK,UAAW,GAAE,CAAC;IACvE;EACF;AACF;;AAGA,MAAMG,qBAAqB,CAA4B;EAIrDJ,WAAWA,CAACK,cAAsB,EAAEC,cAAsB,EAAE;IAAA,KAHpDD,cAAc;IAAA,KACdC,cAAc;IAGpB,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,cAAc,GAAGA,cAAc;EACtC;EAEAX,GAAGA,CAACC,MAAc,EAAQ;IACxBC,OAAO,CAACC,GAAG,CACR,cAAaF,MAAO,8BAA6B,IAAI,CAACS,cAAe,GACxE,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}