{"ast":null,"code":"const urlJsonEmployee = \"http://localhost:4000/workers\";\nexport class Employee {\n  constructor(employeeId, name, position, salary) {\n    let messageAdmin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n    let status = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    this.id = void 0;\n    this.name = void 0;\n    this.position = void 0;\n    this.salary = void 0;\n    this.messageAdmin = void 0;\n    this.status = void 0;\n    this.name = name;\n    this.id = employeeId;\n    this.position = position;\n    this.salary = salary;\n    this.messageAdmin = messageAdmin;\n    this.status = status;\n  }\n  getStatus() {\n    return this.status;\n  }\n  getName() {\n    return this.name;\n  }\n  getEmployeeId() {\n    return this.id;\n  }\n  getPosition() {\n    return this.position;\n  }\n  getSalary() {\n    return this.salary;\n  }\n  getMessage() {\n    return this.messageAdmin;\n  }\n  calculatePay() {\n    // Метод для розрахунку заробітної плати\n    // Реалізація цього методу залежить від конкретних правил готелю\n    return this.salary;\n  }\n  addWorker(newEmployee) {\n    fetch(urlJsonEmployee, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newEmployee)\n    }).then(response => response.json()).then(newEmployee => {\n      window.alert(\"Employee added to a database!\");\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  fireWorker(fireEmployee) {\n    fetch(`${urlJsonEmployee}/${fireEmployee.getEmployeeId()}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(fireEmployee)\n    }).then(response => response.json()).then(updatedRoom => {\n      window.alert(\"Employee information updated!\");\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n}\nexport class CleaningEmployee extends Employee {\n  constructor(name, id, position, salary) {\n    let messageAdmin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n    let status = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    let cleaningArea = arguments.length > 6 ? arguments[6] : undefined;\n    super(id, name, position, salary, messageAdmin, status);\n    this.cleaningRoomNumbers = [];\n    this.cleaningRoomNumbers = cleaningArea;\n  }\n  getCleaningRoomNumbers() {\n    return this.cleaningRoomNumbers;\n  }\n  quickCleaning() {\n    //\n  }\n}\nexport function getWorkerById(workerId) {\n  return fetch(urlJsonEmployee).then(response => response.json()).then(data => {\n    console.log(data);\n    console.log(workerId);\n    const employees = data.filter(employee => employee.id == workerId && employee.status == true);\n    console.log(employees);\n    return employees;\n  }).catch(error => {\n    console.error(error);\n  });\n}\nexport function getAllWorker(workerId) {\n  return fetch(urlJsonEmployee).then(response => response.json()).then(data => {\n    console.log(data);\n    console.log(workerId);\n    const employees = data.filter(employee => employee.id == workerId && employee.status == true);\n    console.log(employees);\n    return employees;\n  }).catch(error => {\n    console.error(error);\n  });\n}","map":{"version":3,"names":["urlJsonEmployee","Employee","constructor","employeeId","name","position","salary","messageAdmin","arguments","length","undefined","status","id","getStatus","getName","getEmployeeId","getPosition","getSalary","getMessage","calculatePay","addWorker","newEmployee","fetch","method","headers","body","JSON","stringify","then","response","json","window","alert","catch","error","console","fireWorker","fireEmployee","updatedRoom","CleaningEmployee","cleaningArea","cleaningRoomNumbers","getCleaningRoomNumbers","quickCleaning","getWorkerById","workerId","data","log","employees","filter","employee","getAllWorker"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/classes/Employee.ts"],"sourcesContent":["const urlJsonEmployee = \"http://localhost:4000/workers\";\nexport class Employee {\n  private id: number;\n  private name: string;\n  private position: string;\n  private salary: number;\n  private messageAdmin: string;\n  private status: boolean;\n\n  constructor(\n    employeeId: number,\n    name: string,\n    position: string,\n    salary: number,\n    messageAdmin: string = \"\",\n    status: boolean = true\n  ) {\n    this.name = name;\n    this.id = employeeId;\n    this.position = position;\n    this.salary = salary;\n    this.messageAdmin = messageAdmin;\n    this.status = status;\n  }\n  public getStatus(): boolean {\n    return this.status;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public getEmployeeId(): number {\n    return this.id;\n  }\n\n  public getPosition(): string {\n    return this.position;\n  }\n\n  public getSalary(): number {\n    return this.salary;\n  }\n\n  public getMessage(): string {\n    return this.messageAdmin;\n  }\n\n  public calculatePay(): number {\n    // Метод для розрахунку заробітної плати\n    // Реалізація цього методу залежить від конкретних правил готелю\n    return this.salary;\n  }\n\n  public addWorker(newEmployee: Employee): void {\n    fetch(urlJsonEmployee, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newEmployee),\n    })\n      .then((response) => response.json())\n      .then((newEmployee: Employee) => {\n        window.alert(\"Employee added to a database!\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n  public fireWorker(fireEmployee: Employee): void {\n    fetch(`${urlJsonEmployee}/${fireEmployee.getEmployeeId()}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(fireEmployee),\n    })\n      .then((response) => response.json())\n      .then((updatedRoom) => {\n        window.alert(\"Employee information updated!\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n}\nexport class CleaningEmployee extends Employee {\n  private cleaningRoomNumbers: string[] = [];\n\n  constructor(\n    name: string,\n    id: number,\n    position: string,\n    salary: number,\n    messageAdmin: string = \"\",\n    status: boolean = true,\n    cleaningArea: string[]\n  ) {\n    super(id, name, position, salary, messageAdmin, status);\n    this.cleaningRoomNumbers = cleaningArea;\n  }\n\n  public getCleaningRoomNumbers(): string[] {\n    return this.cleaningRoomNumbers;\n  }\n\n  public quickCleaning(): void {\n    //\n  }\n}\nexport function getWorkerById(workerId: number) {\n  return fetch(urlJsonEmployee)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      console.log(workerId);\n      const employees = data.filter(\n        (employee) => employee.id == workerId && employee.status == true\n      );\n      console.log(employees);\n      return employees;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\nexport function getAllWorker(workerId: number) {\n  return fetch(urlJsonEmployee)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      console.log(workerId);\n      const employees = data.filter(\n        (employee) => employee.id == workerId && employee.status == true\n      );\n      console.log(employees);\n      return employees;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}