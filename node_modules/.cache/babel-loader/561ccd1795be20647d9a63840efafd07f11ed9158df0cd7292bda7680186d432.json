{"ast":null,"code":"//Передбачається функція,яка визначає сімейство схожих алгоритмів оплати і розміщує кожен з них у власному класі)  - Pattern Стратегія[Strategy]\n\nexport class LaundryContext {\n  constructor(strategy) {\n    this.laundryStrategy = void 0;\n    this.laundryStrategy = strategy;\n  }\n  setStrategy(strategy) {\n    this.laundryStrategy = strategy;\n  }\n  executeLaundry() {\n    this.laundryStrategy.wash();\n  }\n}\nexport class StandardLaundryStrategy {\n  wash() {\n    alert(`Washing machine ready, click on red button to start washing)`);\n  }\n}\nexport class SyntheticsLaundryStrategy {\n  constructor(weightClothes, typeSynthetics) {\n    this.temperature = void 0;\n    this.weightClothes = void 0;\n    this.typeSynthetics = void 0;\n    this.washingTime = void 0;\n    this.weightClothes = weightClothes;\n    this.typeSynthetics = typeSynthetics;\n  }\n  checkTime() {\n    switch (this.typeSynthetics) {\n      case 'Rayon':\n        this.temperature = 30;\n        this.washingTime = 30;\n        break;\n      case 'Acrilic':\n        this.temperature = 60;\n        this.washingTime = 30;\n        break;\n      case \"Polyester\":\n        this.temperature = 80;\n        this.washingTime = 30;\n        v;\n    }\n  }\n  wash() {\n    if (this.weightClothes < 30) {\n      this.checkTime();\n      alert(`Washing machine ready, click on red button to start washing)Temperature: ${this.temperature}c. Expected washing time ${this.washingTime} minutes`);\n    } else {\n      alert(\"Overweight!\");\n    }\n  }\n}\nexport class CottonLaundryStrategy {\n  constructor(weightClothes, percentageCotton, temperature) {\n    this.temperature = void 0;\n    this.weightClothes = void 0;\n    this.percentageCotton = void 0;\n    this.washingTime = void 0;\n    this.condition = void 0;\n    this.percentageCotton = percentageCotton;\n    this.weightClothes = weightClothes;\n    this.temperature = temperature;\n  }\n  checkCondition() {\n    if (this.percentageCotton > 80 && this.temperature > 45) {\n      this.washingTime = 69;\n      this.condition = \"Cotton will perfectly wash)\";\n    } else if (this.percentageCotton < 80 && this.temperature < 45) {\n      this.washingTime = 20;\n      this.condition = \"Cotton will damaged)\";\n    } else {\n      this.washingTime = 60;\n      this.condition = \"Future condition underfined\";\n    }\n  }\n  wash() {\n    if (this.weightClothes < 30) {\n      this.checkCondition();\n      alert(`Washing machine ready, click on red button to start washing)Expected condition:${this.condition}. Expected washing time ${this.washingTime} minutes`);\n    } else {\n      alert(\"Overweight!\");\n    }\n  }\n}","map":{"version":3,"names":["LaundryContext","constructor","strategy","laundryStrategy","setStrategy","executeLaundry","wash","StandardLaundryStrategy","alert","SyntheticsLaundryStrategy","weightClothes","typeSynthetics","temperature","washingTime","checkTime","v","CottonLaundryStrategy","percentageCotton","condition","checkCondition"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Laundry/LaundryStrategy.ts"],"sourcesContent":["//Передбачається функція,яка визначає сімейство схожих алгоритмів оплати і розміщує кожен з них у власному класі)  - Pattern Стратегія[Strategy]\n\nexport class LaundryContext {\n  private laundryStrategy: LaundryStrategy;\n\n  constructor(strategy: LaundryStrategy) {\n    this.laundryStrategy = strategy;\n  }\n\n  public setStrategy(strategy: LaundryStrategy): void {\n    this.laundryStrategy = strategy;\n  }\n\n  public executeLaundry(): void {\n    this.laundryStrategy.wash();\n  }\n}\n\ninterface LaundryStrategy {\n  wash(): void;\n}\n\nexport class StandardLaundryStrategy implements LaundryStrategy {\n  public wash(): void {\n    alert(`Washing machine ready, click on red button to start washing)`);\n  }\n}\n\nexport class SyntheticsLaundryStrategy implements LaundryStrategy {\n  private temperature: number;\n  private weightClothes: number;\n  private typeSynthetics: string;\n  private washingTime: number;\n\n  constructor(weightClothes: number, typeSynthetics: string) {\n    this.weightClothes = weightClothes;\n    this.typeSynthetics = typeSynthetics;\n  }\n\n  private checkTime(): void {\n    switch (this.typeSynthetics) {\n      case 'Rayon':\n        this.temperature = 30;\n        this.washingTime = 30;\n        break;\n      case 'Acrilic':\n        this.temperature = 60;\n        this.washingTime = 30;\n        break;\n      case \"Polyester\":\n        this.temperature = 80;\n        this.washingTime = 30;\n        v\n    }\n  }\n  public wash(): void {\n    if (this.weightClothes < 30) {\n      this.checkTime();\n      alert(\n        `Washing machine ready, click on red button to start washing)Temperature: ${this.temperature}c. Expected washing time ${this.washingTime} minutes`\n      );\n    } else {\n      alert(\"Overweight!\");\n    }\n  }\n}\n\nexport class CottonLaundryStrategy implements LaundryStrategy {\n  private temperature: number;\n  private weightClothes: number;\n  private percentageCotton: number;\n  private washingTime: number;\n  private condition: string;\n\n  constructor(\n    weightClothes: number,\n    percentageCotton: number,\n    temperature: number\n  ) {\n    this.percentageCotton = percentageCotton;\n    this.weightClothes = weightClothes;\n    this.temperature = temperature;\n  }\n\n  private checkCondition(): void {\n    if (this.percentageCotton > 80 && this.temperature > 45) {\n      this.washingTime = 69;\n      this.condition = \"Cotton will perfectly wash)\";\n    } else if (this.percentageCotton < 80 && this.temperature < 45) {\n      this.washingTime = 20;\n      this.condition = \"Cotton will damaged)\";\n    } else {\n      this.washingTime = 60;\n      this.condition = \"Future condition underfined\";\n    }\n  }\n  public wash(): void {\n    if (this.weightClothes < 30) {\n      this.checkCondition();\n      alert(\n        `Washing machine ready, click on red button to start washing)Expected condition:${this.condition}. Expected washing time ${this.washingTime} minutes`\n      );\n    } else {\n      alert(\"Overweight!\");\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}