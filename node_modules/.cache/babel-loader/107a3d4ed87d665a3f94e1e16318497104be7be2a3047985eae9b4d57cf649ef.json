{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/createClass.js\";//Функція оцінки клієнтами якості обслуговування по шкалі 0/10 - Pattern Спостерігач\nvar urlJsonReviews=\"http://localhost:4000/reviews\";//Subscribes\nexport var ResidentReviews=/*#__PURE__*/function(){function ResidentReviews(nameres,text){_classCallCheck(this,ResidentReviews);this.nameres=void 0;this.satisfactionLevel=void 0;this.textReview=void 0;this.administrationName=void 0;this.nameres=nameres;this.textReview=text;this.administrationName=[];}_createClass(ResidentReviews,[{key:\"nameResident\",get:function get(){return this.nameres;}},{key:\"satisfactionLevelGet\",get:function get(){return this.satisfactionLevel;}},{key:\"textRevieGet\",get:function get(){return this.textReview;}},{key:\"SatisfactionLevelSet\",set:function set(value){this.satisfactionLevel=value;this.notify();}},{key:\"attach\",value:function attach(observer){this.administrationName.push(observer);}},{key:\"detach\",value:function detach(observer){var index=this.administrationName.indexOf(observer);if(index!==-1){this.administrationName.splice(index,1);}}},{key:\"addReview\",value:function addReview(concreteSubject,administrationName){console.log({nameres:concreteSubject.nameResident,satisfactionLevel:concreteSubject.satisfactionLevelGet,textReview:concreteSubject.textRevieGet,administrationName:administrationName});fetch(urlJsonReviews,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({\"id\":Math.floor(Math.random()*10001),\"nameres\":concreteSubject.nameResident,\"satisfactionLevel\":concreteSubject.satisfactionLevelGet,\"textReview\":concreteSubject.textRevieGet,\"administrationName\":administrationName})}).then(function(response){return response.json();}).then(function(concreteSubject){window.alert(\"Review added to a database!\");}).catch(function(error){console.error(error);});}},{key:\"notify\",value:function notify(){var _iterator=_createForOfIteratorHelper(this.administrationName),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _observer=_step.value;_observer.update(this);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}}]);return ResidentReviews;}();//declare the update method used by subjects\nexport var HotelAdministration=/*#__PURE__*/function(){function HotelAdministration(){var observerName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"Vlad\";_classCallCheck(this,HotelAdministration);this.administrationName=void 0;this.administrationName=observerName;}_createClass(HotelAdministration,[{key:\"update\",value:function update(subject){if(subject instanceof ResidentReviews){var concreteSubject=subject;concreteSubject.addReview(concreteSubject,this.administrationName);// if (concreteSubject.SatisfactionLevelGet >= 4) {\n//   alert(`Адміністратор ${this.administrationName} отримав оцінку від користувача ${concreteSubject.nameResident} стосовно якості обслуговування готелю. Оцінка: ${concreteSubject.SatisfactionLevelGet}. Адміністратор ${this.administrationName} задоволений результатом роботи готелю і вдячний ${concreteSubject.nameResident} за хорошу оцінку!`);\n// } else {\n//   alert(`Адміністратор ${this.administrationName} отримав оцінку від користувача ${concreteSubject.nameResident} стосовно якості обслуговування готелю. Оцінка: ${concreteSubject.SatisfactionLevelGet}. Адміністратор ${this.administrationName} просить ${concreteSubject.nameResident} прийняти вибачення і пообіцяв виправити ситуацію!`);\n// }\n}}}]);return HotelAdministration;}();","map":{"version":3,"names":["urlJsonReviews","ResidentReviews","nameres","text","_classCallCheck","satisfactionLevel","textReview","administrationName","_createClass","key","get","set","value","notify","attach","observer","push","detach","index","indexOf","splice","addReview","concreteSubject","console","log","nameResident","satisfactionLevelGet","textRevieGet","fetch","method","headers","body","JSON","stringify","Math","floor","random","then","response","json","window","alert","catch","error","_iterator","_createForOfIteratorHelper","_step","s","n","done","update","err","e","f","HotelAdministration","observerName","arguments","length","undefined","subject"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Review/ReviewObserver.ts"],"sourcesContent":["//Функція оцінки клієнтами якості обслуговування по шкалі 0/10 - Pattern Спостерігач\nconst urlJsonReviews = \"http://localhost:4000/reviews\";\n//Subscribes\nexport interface ISubject {\n  attach(observer: IObserver): void;\n  detach(observer: IObserver): void;\n  notify(): void;\n}\n\nexport class ResidentReviews implements ISubject {\n  private nameres: string;\n  private satisfactionLevel: number;\n  private textReview: string;\n  private administrationName: IObserver[];\n\n  constructor(nameres: string, text: string) {\n    this.nameres = nameres;\n    this.textReview = text;\n    this.administrationName = [];\n  }\n\n  public get nameResident(): string {\n    return this.nameres;\n  }\n\n  public get satisfactionLevelGet(): number {\n    return this.satisfactionLevel;\n  }\n  public get textRevieGet(): string {\n    return this.textReview;\n  }\n  public set SatisfactionLevelSet(value: number) {\n    this.satisfactionLevel = value;\n    this.notify();\n  }\n\n  public attach(observer: IObserver) {\n    this.administrationName.push(observer);\n  }\n\n  public detach(observer: IObserver) {\n    const index = this.administrationName.indexOf(observer);\n    if (index !== -1) {\n      this.administrationName.splice(index, 1);\n    }\n  }\n\n  public addReview(\n    concreteSubject: ResidentReviews,\n    administrationName: string\n  ) {\n    console.log({\n      nameres: concreteSubject.nameResident,\n      satisfactionLevel: concreteSubject.satisfactionLevelGet,\n      textReview: concreteSubject.textRevieGet,\n      administrationName: administrationName,\n    });\n    fetch(urlJsonReviews, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        \"id\": Math.floor(Math.random() * 10001),\n        \"nameres\": concreteSubject.nameResident,\n        \"satisfactionLevel\": concreteSubject.satisfactionLevelGet,\n        \"textReview\": concreteSubject.textRevieGet,\n        \"administrationName\": administrationName,\n      }),\n    })\n      .then((response) => response.json())\n      .then((concreteSubject: ResidentReviews) => {\n        window.alert(\"Review added to a database!\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  public notify() {\n    for (const observer of this.administrationName) {\n      observer.update(this);\n    }\n  }\n}\n\n//declare the update method used by subjects\nexport interface IObserver {\n  update(subject: ISubject): void;\n}\n\nexport class HotelAdministration implements IObserver {\n  private administrationName: string;\n\n  constructor(observerName: string = \"Vlad\") {\n    this.administrationName = observerName;\n  }\n\n  public update(subject: ISubject) {\n    if (subject instanceof ResidentReviews) {\n      const concreteSubject: ResidentReviews = subject;\n      concreteSubject.addReview(concreteSubject, this.administrationName);\n      // if (concreteSubject.SatisfactionLevelGet >= 4) {\n      //   alert(`Адміністратор ${this.administrationName} отримав оцінку від користувача ${concreteSubject.nameResident} стосовно якості обслуговування готелю. Оцінка: ${concreteSubject.SatisfactionLevelGet}. Адміністратор ${this.administrationName} задоволений результатом роботи готелю і вдячний ${concreteSubject.nameResident} за хорошу оцінку!`);\n      // } else {\n      //   alert(`Адміністратор ${this.administrationName} отримав оцінку від користувача ${concreteSubject.nameResident} стосовно якості обслуговування готелю. Оцінка: ${concreteSubject.SatisfactionLevelGet}. Адміністратор ${this.administrationName} просить ${concreteSubject.nameResident} прийняти вибачення і пообіцяв виправити ситуацію!`);\n      // }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}