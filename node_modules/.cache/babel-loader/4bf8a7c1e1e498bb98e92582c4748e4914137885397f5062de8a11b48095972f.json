{"ast":null,"code":"const urlJsonRoom = \"http://localhost:4000/rooms\";\nexport class Room {\n  constructor(id, roomNumber, pricePerNight) {\n    this.id = void 0;\n    this.roomNumber = void 0;\n    this.checkInDate = void 0;\n    this.checkOutDate = void 0;\n    this.guestId = void 0;\n    this.isCleaned = void 0;\n    this.pricePerNight = void 0;\n    this.priceService = void 0;\n    this.id = id;\n    this.roomNumber = roomNumber;\n    this.checkInDate = null;\n    this.checkOutDate = null;\n    this.guestId = null;\n    this.isCleaned = true;\n    this.pricePerNight = pricePerNight;\n  }\n  getId() {\n    return this.id;\n  }\n  getRoomNumber() {\n    return this.roomNumber;\n  }\n  getCheckInDate() {\n    return this.checkInDate;\n  }\n  getCheckOutDate() {\n    return this.checkOutDate;\n  }\n  getGuestId() {\n    return this.guestId;\n  }\n  isClean() {\n    return this.isCleaned;\n  }\n  getPricePerNight() {\n    return this.pricePerNight;\n  }\n  checkIn(guestId, checkInDate) {\n    this.guestId = guestId;\n    this.checkInDate = checkInDate;\n    this.isCleaned = false;\n  }\n  checkOut() {\n    this.checkOutDate = new Date();\n    this.isCleaned = true;\n  }\n  cleanRoom() {\n    this.isCleaned = true;\n  }\n}\nexport function getRooms() {\n  return fetch(urlJsonRoom).then(response => response.json()).then(data => {\n    const rooms = data; // Assuming the response directly contains the room data\n    console.log(rooms);\n    return rooms;\n  }).catch(error => {\n    console.error(error);\n  });\n}\nexport function modifyRoom(modifiedRoom) {\n  fetch(`${urlJsonRoom}/${modifiedRoom.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(modifiedRoom)\n  }).then(response => response.json()).then(updatedRoom => {\n    window.alert(\"Room updated!\");\n  }).catch(error => {\n    console.error(error);\n  });\n}","map":{"version":3,"names":["urlJsonRoom","Room","constructor","id","roomNumber","pricePerNight","checkInDate","checkOutDate","guestId","isCleaned","priceService","getId","getRoomNumber","getCheckInDate","getCheckOutDate","getGuestId","isClean","getPricePerNight","checkIn","checkOut","Date","cleanRoom","getRooms","fetch","then","response","json","data","rooms","console","log","catch","error","modifyRoom","modifiedRoom","method","headers","body","JSON","stringify","updatedRoom","window","alert"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/classes/Room.ts"],"sourcesContent":["const urlJsonRoom = \"http://localhost:4000/rooms\";\nexport class Room {\n  private id: string;\n  private roomNumber: number;\n  private checkInDate: Date | null;\n  private checkOutDate: Date | null;\n  private guestId: string | null;\n  private isCleaned: boolean;\n  private pricePerNight: number;\n  private priceService:number;\n\n  constructor(id: string, roomNumber: number, pricePerNight: number) {\n    this.id = id;\n    this.roomNumber = roomNumber;\n    this.checkInDate = null;\n    this.checkOutDate = null;\n    this.guestId = null;\n    this.isCleaned = true;\n    this.pricePerNight = pricePerNight;\n  }\n\n  public getId(): string {\n    return this.id;\n  }\n\n  public getRoomNumber(): number {\n    return this.roomNumber;\n  }\n\n  public getCheckInDate(): Date | null {\n    return this.checkInDate;\n  }\n\n  public getCheckOutDate(): Date | null {\n    return this.checkOutDate;\n  }\n\n  public getGuestId(): string | null {\n    return this.guestId;\n  }\n\n  public isClean(): boolean {\n    return this.isCleaned;\n  }\n\n  public getPricePerNight(): number {\n    return this.pricePerNight;\n  }\n\n  public checkIn(guestId: string, checkInDate: Date): void {\n    this.guestId = guestId;\n    this.checkInDate = checkInDate;\n    this.isCleaned = false;\n  }\n\n  public checkOut(): void {\n    this.checkOutDate = new Date();\n    this.isCleaned = true;\n  }\n\n  public cleanRoom(): void {\n    this.isCleaned = true;\n  }\n}\nexport function getRooms() {\n  return fetch(urlJsonRoom)\n    .then((response) => response.json())\n    .then((data) => {\n      const rooms = data; // Assuming the response directly contains the room data\n      console.log(rooms);\n      return rooms;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\nexport function modifyRoom(modifiedRoom: Room) {\n  fetch(`${urlJsonRoom}/${modifiedRoom.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(modifiedRoom),\n  })\n    .then((response) => response.json())\n    .then((updatedRoom) => {\n      window.alert(\"Room updated!\");\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,6BAA6B;AACjD,OAAO,MAAMC,IAAI,CAAC;EAUhBC,WAAWA,CAACC,EAAU,EAAEC,UAAkB,EAAEC,aAAqB,EAAE;IAAA,KAT3DF,EAAE;IAAA,KACFC,UAAU;IAAA,KACVE,WAAW;IAAA,KACXC,YAAY;IAAA,KACZC,OAAO;IAAA,KACPC,SAAS;IAAA,KACTJ,aAAa;IAAA,KACbK,YAAY;IAGlB,IAAI,CAACP,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACJ,aAAa,GAAGA,aAAa;EACpC;EAEOM,KAAKA,CAAA,EAAW;IACrB,OAAO,IAAI,CAACR,EAAE;EAChB;EAEOS,aAAaA,CAAA,EAAW;IAC7B,OAAO,IAAI,CAACR,UAAU;EACxB;EAEOS,cAAcA,CAAA,EAAgB;IACnC,OAAO,IAAI,CAACP,WAAW;EACzB;EAEOQ,eAAeA,CAAA,EAAgB;IACpC,OAAO,IAAI,CAACP,YAAY;EAC1B;EAEOQ,UAAUA,CAAA,EAAkB;IACjC,OAAO,IAAI,CAACP,OAAO;EACrB;EAEOQ,OAAOA,CAAA,EAAY;IACxB,OAAO,IAAI,CAACP,SAAS;EACvB;EAEOQ,gBAAgBA,CAAA,EAAW;IAChC,OAAO,IAAI,CAACZ,aAAa;EAC3B;EAEOa,OAAOA,CAACV,OAAe,EAAEF,WAAiB,EAAQ;IACvD,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACG,SAAS,GAAG,KAAK;EACxB;EAEOU,QAAQA,CAAA,EAAS;IACtB,IAAI,CAACZ,YAAY,GAAG,IAAIa,IAAI,CAAC,CAAC;IAC9B,IAAI,CAACX,SAAS,GAAG,IAAI;EACvB;EAEOY,SAASA,CAAA,EAAS;IACvB,IAAI,CAACZ,SAAS,GAAG,IAAI;EACvB;AACF;AACA,OAAO,SAASa,QAAQA,CAAA,EAAG;EACzB,OAAOC,KAAK,CAACvB,WAAW,CAAC,CACtBwB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd,MAAMC,KAAK,GAAGD,IAAI,CAAC,CAAC;IACpBE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOA,KAAK;EACd,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;AACN;AACA,OAAO,SAASC,UAAUA,CAACC,YAAkB,EAAE;EAC7CX,KAAK,CAAE,GAAEvB,WAAY,IAAGkC,YAAY,CAAC/B,EAAG,EAAC,EAAE;IACzCgC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,YAAY;EACnC,CAAC,CAAC,CACCV,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEgB,WAAW,IAAK;IACrBC,MAAM,CAACC,KAAK,CAAC,eAAe,CAAC;EAC/B,CAAC,CAAC,CACDX,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}