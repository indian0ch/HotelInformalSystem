{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/andreyfesiuk/Desktop/\\u041A\\u0443\\u0440\\u0441\\u043E\\u0432\\u0430 \\u041E\\u041E\\u041F/HotelInformalSystem/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{getRooms,modifyRoom}from\"../../classes/Room.ts\";import{Guest}from\"../../classes/Guest.ts\";///Facade\nexport var ReservationRoomFacade=/*#__PURE__*/function(){function ReservationRoomFacade(reservationRoom){_classCallCheck(this,ReservationRoomFacade);this.reservationRoom=void 0;this.reservationRoom=reservationRoom;}_createClass(ReservationRoomFacade,[{key:\"doReservation\",value:function(){var _doReservation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var available;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(this.reservationRoom.guest);_context.next=3;return this.reservationRoom.checkAvailability();case 3:available=_context.sent;if(typeof available!==\"string\"){available.checkInDate=this.reservationRoom.checkInDate;available.checkOutDate=this.reservationRoom.checkOutDate;available.guestId=this.reservationRoom.guest.id;//available.priceService = this.reservationRoom.servicePrice;\nthis.reservationRoom.guest.postGuest(this.reservationRoom.guest);modifyRoom(available);}else{window.alert(\"No one room with such parameter available!\");}case 5:case\"end\":return _context.stop();}},_callee,this);}));function doReservation(){return _doReservation.apply(this,arguments);}return doReservation;}()}]);return ReservationRoomFacade;}();export var ReservationRoom=/*#__PURE__*/function(){function ReservationRoom(){var full_name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"Fesiuk_Andrey\";var phoneNumbe=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"030302032\";var id=arguments.length>2&&arguments[2]!==undefined?arguments[2]:32335552;var email=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"den@gmail.com\";var checkInDate=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"2023-06-01\";var checkOutDate=arguments.length>5&&arguments[5]!==undefined?arguments[5]:\"2023-06-03\";var typeRoom=arguments.length>6&&arguments[6]!==undefined?arguments[6]:100;var servicePrice=arguments.length>7&&arguments[7]!==undefined?arguments[7]:20;_classCallCheck(this,ReservationRoom);this.guest=void 0;this.room=void 0;this.typeRoom=void 0;this.checkInDate=void 0;this.checkOutDate=void 0;this.servicePrice=void 0;this.guest=new Guest(id,full_name,email,phoneNumbe);this.checkInDate=checkInDate;this.checkOutDate=checkOutDate;this.typeRoom=typeRoom;this.servicePrice=servicePrice;}_createClass(ReservationRoom,[{key:\"checkAvailability\",value:function(){var _checkAvailability=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _this=this;var roomArray,availableRoomArray;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getRooms().then(function(roomArr){return roomArr;});case 2:roomArray=_context2.sent;availableRoomArray=roomArray.filter(function(room){return room.guestId===null&&room.pricePerNight==_this.typeRoom;});if(!(availableRoomArray.length!==0)){_context2.next=8;break;}return _context2.abrupt(\"return\",availableRoomArray[0]);case 8:return _context2.abrupt(\"return\",\"No\");case 9:case\"end\":return _context2.stop();}},_callee2);}));function checkAvailability(){return _checkAvailability.apply(this,arguments);}return checkAvailability;}()}]);return ReservationRoom;}();","map":{"version":3,"names":["getRooms","modifyRoom","Guest","ReservationRoomFacade","reservationRoom","_classCallCheck","_createClass","key","value","_doReservation","_asyncToGenerator","_regeneratorRuntime","mark","_callee","available","wrap","_callee$","_context","prev","next","console","log","guest","checkAvailability","sent","checkInDate","checkOutDate","guestId","id","postGuest","window","alert","stop","doReservation","apply","arguments","ReservationRoom","full_name","length","undefined","phoneNumbe","email","typeRoom","servicePrice","room","_checkAvailability","_callee2","_this","roomArray","availableRoomArray","_callee2$","_context2","then","roomArr","filter","pricePerNight","abrupt"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Reservation/ReservationFacade.ts"],"sourcesContent":["import { Room, getRooms, modifyRoom } from \"../../classes/Room.ts\";\nimport { Guest } from \"../../classes/Guest.ts\";\n\n///Facade\nexport class ReservationRoomFacade {\n  protected reservationRoom: ReservationRoom;\n\n  constructor(reservationRoom: ReservationRoom) {\n    this.reservationRoom = reservationRoom;\n  }\n\n  public async doReservation() {\n    console.log(this.reservationRoom.guest);\n    let available = await this.reservationRoom.checkAvailability();\n\n    if (typeof available !== \"string\") {\n      available.checkInDate = this.reservationRoom.checkInDate;\n      available.checkOutDate = this.reservationRoom.checkOutDate;\n      available.guestId = this.reservationRoom.guest.id;\n      //available.priceService = this.reservationRoom.servicePrice;\n      this.reservationRoom.guest.postGuest(this.reservationRoom.guest);\n      modifyRoom(available);\n    } else {\n      window.alert(\"No one room with such parameter available!\");\n    }\n  }\n}\n\nexport class ReservationRoom {\n  public guest: Guest;\n  public room: Room;\n  public typeRoom: number;\n  public checkInDate: string;\n  public checkOutDate: string;\n  public servicePrice: number;\n\n  constructor(\n    full_name: string = \"Fesiuk_Andrey\",\n    phoneNumbe: string = \"030302032\",\n    id: number = 32335552,\n    email: string = \"den@gmail.com\",\n    checkInDate: string = \"2023-06-01\",\n    checkOutDate: string = \"2023-06-03\",\n    typeRoom: number = 100,\n    servicePrice: number = 20\n  ) {\n    this.guest = new Guest(id, full_name, email, phoneNumbe);\n    this.checkInDate = checkInDate;\n    this.checkOutDate = checkOutDate;\n    this.typeRoom = typeRoom;\n    this.servicePrice = servicePrice;\n  }\n\n  public async checkAvailability() {\n    let roomArray = await getRooms().then((roomArr) => {\n      return roomArr;\n    });\n    const availableRoomArray = roomArray.filter(\n      (room) => room.guestId === null && room.pricePerNight == this.typeRoom\n    );\n    if (availableRoomArray.length !== 0) {\n      return availableRoomArray[0];\n    } else {\n      return \"No\";\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}