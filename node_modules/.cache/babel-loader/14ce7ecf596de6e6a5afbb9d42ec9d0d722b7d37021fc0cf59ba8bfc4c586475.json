{"ast":null,"code":"import { getWorker } from \"../../classes/Employee\";\n\n//Управління персоналом - Pattern Команда\nconst urlJsonEmployee = \"http://localhost:4000/workers\";\n//Invoker\nexport class Manager {\n  constructor() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Andriy\";\n    //'Invoker'\n    this.commands = [];\n    this.name = void 0;\n    this.name = name;\n  }\n  SetCommand(com) {\n    this.commands.push(com);\n  }\n  ExecuteCommands() {\n    for (const command of this.commands) {\n      console.log(command);\n      command.Execute();\n    }\n    console.log(this.commands);\n    this.commands = [];\n  }\n}\nexport class WorkersCommand {\n  constructor() {\n    this.ListWorkers = [];\n  }\n  //Dictionary in c#\n  // public AddWorker(newEmployee: Employee): void {\n  //   // console.log(`${workerName} прийнятий на роботу`);\n  //   // this.ListWorkers.push(workerName, position);\n  //   fetch(urlJsonEmployee, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newEmployee),\n  //   })\n  //     .then((response) => response.json())\n  //     .then((newEmployee: Employee) => {\n  //       window.alert(\"Employee added to a database!\");\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n  Fire(workerName) {\n    console.log(`${workerName} звільнений`);\n    //this.ListWorkers.delete(workerName);\n  }\n\n  CheckList() {\n    console.log(\"Актуальний список праціників готелю на даний момент:[ПІБ]-[Посада]:\");\n    this.ListWorkers.forEach((position, workerName) => {\n      console.log(`${workerName}-${position}`);\n    });\n  }\n}\nexport class AddWorkersCommand {\n  constructor(worker) {\n    this.worker = void 0;\n    this.worker = worker;\n  }\n  Execute() {\n    console.log(true);\n    this.worker.addWorker(this.worker);\n  }\n}\nexport class FireWorkersCommand {\n  constructor(workerId) {\n    this.worker = void 0;\n    this.workerId = void 0;\n    this.worker = getWorker(workerId);\n    this.workerId = workerId;\n  }\n  Execute() {\n    this.worker.fireWorker(this.worker);\n  }\n}","map":{"version":3,"names":["getWorker","urlJsonEmployee","Manager","constructor","name","arguments","length","undefined","commands","SetCommand","com","push","ExecuteCommands","command","console","log","Execute","WorkersCommand","ListWorkers","Fire","workerName","CheckList","forEach","position","AddWorkersCommand","worker","addWorker","FireWorkersCommand","workerId","fireWorker"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Workers/WorkersCommand.ts"],"sourcesContent":["import {Employee,getWorker}  from \"../../classes/Employee\";\n\n//Управління персоналом - Pattern Команда\nconst urlJsonEmployee = \"http://localhost:4000/workers\";\nexport interface ICommand {\n  Execute(): void;\n}\n//Invoker\nexport class Manager {\n  //'Invoker'\n  private commands: ICommand[] = [];\n  private name: string;\n\n  constructor(name: string = \"Andriy\") {\n    this.name = name;\n  }\n\n  public SetCommand(com: ICommand): void {\n    this.commands.push(com);\n  }\n\n  public ExecuteCommands(): void {\n    for (const command of this.commands) {\n      console.log(command);\n      command.Execute();\n    }\n    console.log(this.commands);\n    this.commands = [];\n  }\n}\n\nexport class WorkersCommand {\n  public ListWorkers: string[] = [];\n  //Dictionary in c#\n  // public AddWorker(newEmployee: Employee): void {\n  //   // console.log(`${workerName} прийнятий на роботу`);\n  //   // this.ListWorkers.push(workerName, position);\n  //   fetch(urlJsonEmployee, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newEmployee),\n  //   })\n  //     .then((response) => response.json())\n  //     .then((newEmployee: Employee) => {\n  //       window.alert(\"Employee added to a database!\");\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n  public Fire(workerName: string): void {\n    console.log(`${workerName} звільнений`);\n    //this.ListWorkers.delete(workerName);\n  }\n\n  public CheckList(): void {\n    console.log(\n      \"Актуальний список праціників готелю на даний момент:[ПІБ]-[Посада]:\"\n    );\n    this.ListWorkers.forEach((position, workerName) => {\n      console.log(`${workerName}-${position}`);\n    });\n  }\n}\n\nexport class AddWorkersCommand implements ICommand {\n  private worker: Employee;\n\n  constructor(worker: Employee) {\n    this.worker = worker;\n  }\n\n  public Execute(): void {\n    console.log(true);\n    this.worker.addWorker(this.worker);\n  }\n}\n\nexport class FireWorkersCommand implements ICommand {\n  private worker: Employee;\n  private workerId: number;\n\n  constructor(workerId: number) {\n    this.worker=getWorker(workerId);\n    this.workerId = workerId;\n  }\n\n  public Execute(): void {\n    this.worker.fireWorker(this.worker);\n  }\n}\n"],"mappings":"AAAA,SAAiBA,SAAS,QAAQ,wBAAwB;;AAE1D;AACA,MAAMC,eAAe,GAAG,+BAA+B;AAIvD;AACA,OAAO,MAAMC,OAAO,CAAC;EAKnBC,WAAWA,CAAA,EAA0B;IAAA,IAAzBC,IAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,QAAQ;IAJnC;IAAA,KACQG,QAAQ,GAAe,EAAE;IAAA,KACzBJ,IAAI;IAGV,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEOK,UAAUA,CAACC,GAAa,EAAQ;IACrC,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,GAAG,CAAC;EACzB;EAEOE,eAAeA,CAAA,EAAS;IAC7B,KAAK,MAAMC,OAAO,IAAI,IAAI,CAACL,QAAQ,EAAE;MACnCM,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpBA,OAAO,CAACG,OAAO,CAAC,CAAC;IACnB;IACAF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC;IAC1B,IAAI,CAACA,QAAQ,GAAG,EAAE;EACpB;AACF;AAEA,OAAO,MAAMS,cAAc,CAAC;EAAAd,YAAA;IAAA,KACnBe,WAAW,GAAa,EAAE;EAAA;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEOC,IAAIA,CAACC,UAAkB,EAAQ;IACpCN,OAAO,CAACC,GAAG,CAAE,GAAEK,UAAW,aAAY,CAAC;IACvC;EACF;;EAEOC,SAASA,CAAA,EAAS;IACvBP,OAAO,CAACC,GAAG,CACT,qEACF,CAAC;IACD,IAAI,CAACG,WAAW,CAACI,OAAO,CAAC,CAACC,QAAQ,EAAEH,UAAU,KAAK;MACjDN,OAAO,CAACC,GAAG,CAAE,GAAEK,UAAW,IAAGG,QAAS,EAAC,CAAC;IAC1C,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMC,iBAAiB,CAAqB;EAGjDrB,WAAWA,CAACsB,MAAgB,EAAE;IAAA,KAFtBA,MAAM;IAGZ,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEOT,OAAOA,CAAA,EAAS;IACrBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI,CAACU,MAAM,CAACC,SAAS,CAAC,IAAI,CAACD,MAAM,CAAC;EACpC;AACF;AAEA,OAAO,MAAME,kBAAkB,CAAqB;EAIlDxB,WAAWA,CAACyB,QAAgB,EAAE;IAAA,KAHtBH,MAAM;IAAA,KACNG,QAAQ;IAGd,IAAI,CAACH,MAAM,GAACzB,SAAS,CAAC4B,QAAQ,CAAC;IAC/B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEOZ,OAAOA,CAAA,EAAS;IACrB,IAAI,CAACS,MAAM,CAACI,UAAU,CAAC,IAAI,CAACJ,MAAM,CAAC;EACrC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}