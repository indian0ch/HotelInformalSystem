{"ast":null,"code":"//Передбачається функція,яка визначає сімейство схожих алгоритмів оплати і розміщує кожен з них у власному класі)  - Pattern Стратегія[Strategy]\n\nclass PaymentFactory {\n  createPayment(paymentType) {\n    switch (paymentType) {\n      case 'Cash':\n        return new CashPaymentStrategy();\n      case 'creditcard':\n        return new CreditCardPayment();\n      case 'paypal':\n        return new PayPalPayment();\n      default:\n        throw new Error(`Invalid payment type: ${paymentType}`);\n    }\n  }\n}\nexport class CashPaymentStrategy {\n  pay(amount) {\n    alert(`Payment of ${amount} by cash.`);\n  }\n}\nexport class CreditCardPaymentStrategy {\n  constructor(cardNumber, cardExpiration, cardCVV) {\n    this.cardNumber = void 0;\n    this.cardExpiration = void 0;\n    this.cardCVV = void 0;\n    this.cardNumber = cardNumber;\n    this.cardExpiration = cardExpiration;\n    this.cardCVV = cardCVV;\n  }\n  pay(amount) {\n    alert(`Payment of ${amount} by credit card: ${this.cardNumber}.`);\n  }\n}\nexport class PayPalPaymentStrategy {\n  constructor(paypalUsername, paypalPassword) {\n    this.paypalUsername = void 0;\n    this.paypalPassword = void 0;\n    this.paypalUsername = paypalUsername;\n    this.paypalPassword = paypalPassword;\n  }\n  pay(amount) {\n    alert(`Payment of ${amount} via PayPal with username: ${this.paypalUsername}.`);\n  }\n}","map":{"version":3,"names":["PaymentFactory","createPayment","paymentType","CashPaymentStrategy","CreditCardPayment","PayPalPayment","Error","pay","amount","alert","CreditCardPaymentStrategy","constructor","cardNumber","cardExpiration","cardCVV","PayPalPaymentStrategy","paypalUsername","paypalPassword"],"sources":["/Users/andreyfesiuk/Desktop/Курсова ООП/HotelInformalSystem/src/components/Payments/PaymentsStrategy.ts"],"sourcesContent":["//Передбачається функція,яка визначає сімейство схожих алгоритмів оплати і розміщує кожен з них у власному класі)  - Pattern Стратегія[Strategy]\n\nclass PaymentFactory {\n  createPayment(paymentType: string): Payment {\n    switch (paymentType) {\n      case 'Cash':\n        return new CashPaymentStrategy();\n      case 'creditcard':\n        return new CreditCardPayment();\n      case 'paypal':\n        return new PayPalPayment();\n      default:\n        throw new Error(`Invalid payment type: ${paymentType}`);\n    }\n  }\n}\n\n\ninterface PaymentWays {\n  pay(amount: number): void;\n}\n\nexport class CashPaymentStrategy implements PaymentWays {\n  pay(amount: number): void {\n    alert(`Payment of ${amount} by cash.`);\n  }\n}\n\nexport class CreditCardPaymentStrategy implements PaymentWays {\n  private cardNumber: string;\n  private cardExpiration: string;\n  private cardCVV: string;\n\n  constructor(cardNumber: string, cardExpiration: string, cardCVV: string) {\n    this.cardNumber = cardNumber;\n    this.cardExpiration = cardExpiration;\n    this.cardCVV = cardCVV;\n  }\n\n  pay(amount: number): void {\n    alert(`Payment of ${amount} by credit card: ${this.cardNumber}.`);\n  }\n}\n\nexport class PayPalPaymentStrategy implements PaymentWays {\n  private paypalUsername: string;\n  private paypalPassword: string;\n\n  constructor(paypalUsername: string, paypalPassword: string) {\n    this.paypalUsername = paypalUsername;\n    this.paypalPassword = paypalPassword;\n  }\n\n  pay(amount: number): void {\n    alert(\n      `Payment of ${amount} via PayPal with username: ${this.paypalUsername}.`\n    );\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,CAAC;EACnBC,aAAaA,CAACC,WAAmB,EAAW;IAC1C,QAAQA,WAAW;MACjB,KAAK,MAAM;QACT,OAAO,IAAIC,mBAAmB,CAAC,CAAC;MAClC,KAAK,YAAY;QACf,OAAO,IAAIC,iBAAiB,CAAC,CAAC;MAChC,KAAK,QAAQ;QACX,OAAO,IAAIC,aAAa,CAAC,CAAC;MAC5B;QACE,MAAM,IAAIC,KAAK,CAAE,yBAAwBJ,WAAY,EAAC,CAAC;IAC3D;EACF;AACF;AAOA,OAAO,MAAMC,mBAAmB,CAAwB;EACtDI,GAAGA,CAACC,MAAc,EAAQ;IACxBC,KAAK,CAAE,cAAaD,MAAO,WAAU,CAAC;EACxC;AACF;AAEA,OAAO,MAAME,yBAAyB,CAAwB;EAK5DC,WAAWA,CAACC,UAAkB,EAAEC,cAAsB,EAAEC,OAAe,EAAE;IAAA,KAJjEF,UAAU;IAAA,KACVC,cAAc;IAAA,KACdC,OAAO;IAGb,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEAP,GAAGA,CAACC,MAAc,EAAQ;IACxBC,KAAK,CAAE,cAAaD,MAAO,oBAAmB,IAAI,CAACI,UAAW,GAAE,CAAC;EACnE;AACF;AAEA,OAAO,MAAMG,qBAAqB,CAAwB;EAIxDJ,WAAWA,CAACK,cAAsB,EAAEC,cAAsB,EAAE;IAAA,KAHpDD,cAAc;IAAA,KACdC,cAAc;IAGpB,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,cAAc,GAAGA,cAAc;EACtC;EAEAV,GAAGA,CAACC,MAAc,EAAQ;IACxBC,KAAK,CACF,cAAaD,MAAO,8BAA6B,IAAI,CAACQ,cAAe,GACxE,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}